apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert -f docker-compose-app.yml --verbose
    kompose.version: 1.34.0 (HEAD)
    traefik.enable: "true"
    traefik.http.routers.-router.entrypoints: web
    traefik.http.routers.-router.rule: Host(``)
    traefik.http.services.-service.loadbalancer.server.port: "3000"
  labels:
    io.kompose.service: app
  name: app
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: app
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert -f docker-compose-app.yml --verbose
        kompose.version: 1.34.0 (HEAD)
        traefik.enable: "true"
        traefik.http.routers.-router.entrypoints: web
        traefik.http.routers.-router.rule: Host(``)
        traefik.http.services.-service.loadbalancer.server.port: "3000"
      labels:
        io.kompose.service: app
    spec:
      containers:
        - env:
            - name: ENV
              value: production
            - name: NODE_ENV
              value: production
            - name: POSTGRES_DB
            - name: POSTGRES_DB_GLOBAL
            - name: POSTGRES_GLOBAL_DB_HOST
            - name: POSTGRES_GLOBAL_DB_PORT
            - name: POSTGRES_PASSWORD
            - name: POSTGRES_PASSWORD_GLOBAL
            - name: POSTGRES_USER
            - name: POSTGRES_USER_GLOBAL
            - name: SUBDOMAIN
            - name: VIRTUAL_HOST
          image: app
          name: app
          ports:
            - containerPort: 3000
              protocol: TCP
      restartPolicy: Always
