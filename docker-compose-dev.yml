version: '3'
services:
  ## APP
  app:
    build: .
    ports:
      - "3000:3000"
    volumes:
      - .:/app
    environment:
      NODE_ENV: dev
      VIRTUAL_HOST: "app.whatsproy.com"
      VIRTUAL_PORT: 3000
      ENV: ${ENV}
    networks:
      - app-network

  ## DB
  db-global:
    image: postgres:13
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      ENV: ${ENV}
    volumes:
      - globaldb-data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      app-network:
          aliases:
            - db-global
  
  ############ works Empresa ##################
  works-app:
    build: .
    ports:
      - "3001:3000"
    volumes:
      - .:/app
    environment:
      NODE_ENV: dev
      VIRTUAL_HOST: "works.whatsproy.com"
      VIRTUAL_PORT: 3000
      ENV: ${ENV}
    networks:
      - app-network

  works-db:
    image: postgres:13
    environment:
      POSTGRES_USER: works_user
      POSTGRES_PASSWORD: works_pass
      POSTGRES_DB: db_works
      ENV: ${ENV}
    volumes:
      - works-db-data:/var/lib/postgresql/data
    ports:
      - "5433:5432"
    networks:
      app-network:
          aliases:
            - works-db


  ############ works Empresa ##################

  # NGINX server
  nginx-proxy:
    image: jwilder/nginx-proxy
    ports:
      - "80:80"
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
    networks:
      - app-network

networks:
  app-network:

volumes:
  globaldb-data:
  works-db-data:
