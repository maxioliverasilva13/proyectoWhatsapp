services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      NODE_ENV: production
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      ENV: production
      SUBDOMAIN: ${SUBDOMAIN}
      VIRTUAL_HOST: ${VIRTUAL_HOST}
      REDIS_HOST: ${REDIS_HOST}
      REDIS_PORT: ${REDIS_PORT}
      FIREBASE_PROJECT_ID: ${FIREBASE_PROJECT_ID}
      FIREBASE_PRIVATE_KEY: ${FIREBASE_PRIVATE_KEY}
      FIREBASE_CLIENT_EMAIL: ${FIREBASE_CLIENT_EMAIL}
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      POSTGRES_USER_GLOBAL: ${POSTGRES_USER_GLOBAL}
      POSTGRES_PASSWORD_GLOBAL: ${POSTGRES_PASSWORD_GLOBAL}
      POSTGRES_GLOBAL_DB_HOST: ${POSTGRES_GLOBAL_DB_HOST}
      POSTGRES_DB_GLOBAL: ${POSTGRES_DB_GLOBAL}
      POSTGRES_GLOBAL_DB_PORT: ${POSTGRES_GLOBAL_DB_PORT}
      ID_INSTANCE: ${ID_INSTANCE}
      GOOGLE_CLIENT_EMAIL: ${GOOGLE_CLIENT_EMAIL}
      GOOGLE_PRIVATE_KEY: ${GOOGLE_PRIVATE_KEY}
      API_TOKEN_INSTANCE: ${API_TOKEN_INSTANCE}
      OPEN_AI_TOKEN: ${OPEN_AI_TOKEN}
      JWT_SECRET_KEY: ${JWT_SECRET_KEY}
      ASSISTANT_ID: ${ASSISTANT_ID}
      RESEND_KEY: ${RESEND_KEY}
      DEEPSEEK_TOKEN: ${DEEPSEEK_TOKEN}

    labels:
      - traefik.enable=true
      - traefik.http.routers.${SUBDOMAIN}-router.rule=Host(`${VIRTUAL_HOST}`)
      - traefik.http.routers.${SUBDOMAIN}-router.entrypoints=websecure
      - traefik.http.routers.${SUBDOMAIN}-router.entrypoints=https
      - traefik.http.services.${SUBDOMAIN}-service.loadbalancer.server.port=3000
      - traefik.http.routers.${SUBDOMAIN}-router.tls=true
      - traefik.http.routers.${SUBDOMAIN}-router.tls.certresolver=myresolver
    networks:
      - app-network
    restart: always
    container_name: ${SUBDOMAIN}-app
networks:
  app-network:
    external: true
volumes:
  globaldb-data:
