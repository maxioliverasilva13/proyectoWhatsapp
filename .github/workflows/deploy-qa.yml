name: Deploy to QA

on:
  push:
    branches:
      - qa

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: qa
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18.x'

    - name: Install dependencies
      run: npm install

    # - name: Add IP address to trusted source (managed database)
    #   uses: GarreauArthur/manage-digital-ocean-managed-database-trusted-sources-gh-action@main
    #   with:
    #     action: "add"
    #     database_id: ${{ secrets.DO_DB_ID }}
    #     digitalocean_token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

    - name: Deploy to DigitalOcean
      env:
        SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        DROPLET_IP: ${{ secrets.DROPLET_IP }}
        DROPLET_USER: ${{ secrets.DROPLET_USER }}
      run: |
        echo "${SSH_PRIVATE_KEY}" > private_key
        chmod 600 private_key
        ssh -i private_key -o StrictHostKeyChecking=no "${DROPLET_USER}@${DROPLET_IP}" 'mkdir -p /projects'

    - name: Execute Deployment Script
      env:
        POSTGRES_USER_GLOBAL: ${{ secrets.POSTGRES_USER_GLOBAL }}
        POSTGRES_PASSWORD_GLOBAL: ${{ secrets.POSTGRES_PASSWORD_GLOBAL }}
        POSTGRES_DB_GLOBAL: ${{ secrets.POSTGRES_DB_GLOBAL }}
        POSTGRES_GLOBAL_DB_HOST: ${{ secrets.POSTGRES_GLOBAL_DB_HOST }}
        POSTGRES_GLOBAL_DB_PORT: ${{ secrets.POSTGRES_GLOBAL_DB_PORT }}
        OPEN_AI_TOKEN: ${{ secrets.OPEN_AI_TOKEN }}
        DROPLET_IP: ${{ secrets.DROPLET_IP }}
      run: node deployCompanies.js

    # - name: Remove IP address to trusted source (managed database)
    #   uses: GarreauArthur/manage-digital-ocean-managed-database-trusted-sources-gh-action@main
    #   with:
    #     action: "remove"
    #     database_id: ${{ secrets.DO_DB_ID }}
    #     digitalocean_token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

